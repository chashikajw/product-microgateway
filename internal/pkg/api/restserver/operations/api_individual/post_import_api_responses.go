// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package api_individual

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/wso2/micro-gw/pkg/api/models"
)

// PostImportAPIOKCode is the HTTP code returned for type PostImportAPIOK
const PostImportAPIOKCode int = 200

/*PostImportAPIOK Created.
API Imported Successfully.


swagger:response postImportApiOK
*/
type PostImportAPIOK struct {
}

// NewPostImportAPIOK creates PostImportAPIOK with default headers values
func NewPostImportAPIOK() *PostImportAPIOK {

	return &PostImportAPIOK{}
}

// WriteResponse to the client
func (o *PostImportAPIOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostImportAPIForbiddenCode is the HTTP code returned for type PostImportAPIForbidden
const PostImportAPIForbiddenCode int = 403

/*PostImportAPIForbidden Forbidden
Not Authorized to import.


swagger:response postImportApiForbidden
*/
type PostImportAPIForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostImportAPIForbidden creates PostImportAPIForbidden with default headers values
func NewPostImportAPIForbidden() *PostImportAPIForbidden {

	return &PostImportAPIForbidden{}
}

// WithPayload adds the payload to the post import Api forbidden response
func (o *PostImportAPIForbidden) WithPayload(payload *models.Error) *PostImportAPIForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post import Api forbidden response
func (o *PostImportAPIForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostImportAPIForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostImportAPINotFoundCode is the HTTP code returned for type PostImportAPINotFound
const PostImportAPINotFoundCode int = 404

/*PostImportAPINotFound Not Found.
Requested API to update not found.


swagger:response postImportApiNotFound
*/
type PostImportAPINotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostImportAPINotFound creates PostImportAPINotFound with default headers values
func NewPostImportAPINotFound() *PostImportAPINotFound {

	return &PostImportAPINotFound{}
}

// WithPayload adds the payload to the post import Api not found response
func (o *PostImportAPINotFound) WithPayload(payload *models.Error) *PostImportAPINotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post import Api not found response
func (o *PostImportAPINotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostImportAPINotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostImportAPIConflictCode is the HTTP code returned for type PostImportAPIConflict
const PostImportAPIConflictCode int = 409

/*PostImportAPIConflict Conflict.
API to import already exists.


swagger:response postImportApiConflict
*/
type PostImportAPIConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostImportAPIConflict creates PostImportAPIConflict with default headers values
func NewPostImportAPIConflict() *PostImportAPIConflict {

	return &PostImportAPIConflict{}
}

// WithPayload adds the payload to the post import Api conflict response
func (o *PostImportAPIConflict) WithPayload(payload *models.Error) *PostImportAPIConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post import Api conflict response
func (o *PostImportAPIConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostImportAPIConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostImportAPIInternalServerErrorCode is the HTTP code returned for type PostImportAPIInternalServerError
const PostImportAPIInternalServerErrorCode int = 500

/*PostImportAPIInternalServerError Internal Server Error.
Error in importing API.


swagger:response postImportApiInternalServerError
*/
type PostImportAPIInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostImportAPIInternalServerError creates PostImportAPIInternalServerError with default headers values
func NewPostImportAPIInternalServerError() *PostImportAPIInternalServerError {

	return &PostImportAPIInternalServerError{}
}

// WithPayload adds the payload to the post import Api internal server error response
func (o *PostImportAPIInternalServerError) WithPayload(payload *models.Error) *PostImportAPIInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post import Api internal server error response
func (o *PostImportAPIInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostImportAPIInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
